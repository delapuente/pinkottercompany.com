!function(e){var t={};function s(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(i,r,function(t){return e[t]}.bind(null,r));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);var i,r,n=(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(e,t)},function(e,t){function s(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}),a=function(e){function t(t){var s=e.call(this,t,0,0,"characters")||this;return s._blinkEffect=s.scene.time.addEvent({delay:100,loop:!0,repeat:1/0,callback:s._switchVisibility,callbackScope:s}),s._blinkEffect.paused=!0,s}return n(t,e),t.prototype.show=function(e,t){this.anims.play("bea-running");var s=35,i=25,r=this.body;r.setSize(s,i,!1),r.setOffset(5,this.height-i),r.reset(e,t),this.setCollideWorldBounds(!0),this.setVisible(!0),this.setActive(!0)},t.prototype.jump=function(){this.setVelocityY(-600)},t.prototype.hit=function(){var e=this;this._blinkEffect.paused&&(this._blinkEffect.paused=!1,this.scene.time.delayedCall(3e3,function(){e._blinkEffect.paused=!0,e.setVisible(!0)},[],this),this.emit("hit"))},t.prototype._switchVisibility=function(){this.setVisible(!this.visible)},t.setupAnimations=function(e){var t=e.anims;t.create({key:"bea-running",frames:t.generateFrameNames("characters",{prefix:"Bea_Run",zeroPad:2,start:1,end:4,suffix:".png"}),frameRate:5,repeat:1/0}),t.create({key:"salva-running",frames:t.generateFrameNames("characters",{prefix:"Salva_Run",zeroPad:2,start:1,end:4,suffix:".png"}),frameRate:5,repeat:1/0}),t.create({key:"bea-idle",frames:t.generateFrameNames("characters",{prefix:"Bea_Idle",zeroPad:2,start:1,end:2,suffix:".png"}),frameRate:2,repeat:1/0}),t.create({key:"salva-idle",frames:t.generateFrameNames("characters",{prefix:"Salva_Idle",zeroPad:2,start:1,end:2,suffix:".png"}),frameRate:2,repeat:1/0}),t.create({key:"bea-win",frames:t.generateFrameNames("characters",{prefix:"Bea_Win",zeroPad:2,start:1,end:3,suffix:".png"}),frameRate:5,repeat:1/0}),t.create({key:"salva-win",frames:t.generateFrameNames("characters",{prefix:"Salva_Win",zeroPad:2,start:1,end:3,suffix:".png"}),frameRate:5,repeat:1/0})},t}(Phaser.Physics.Arcade.Sprite),o=function(){var e=function(t,s){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(t,s)};return function(t,s){function i(){this.constructor=t}e(t,s),t.prototype=null===s?Object.create(s):(i.prototype=s.prototype,new i)}}(),c=function(e){function t(t){return e.call(this,t,0,0,"obstacles")||this}return o(t,e),t.prototype.show=function(e,t){this.anims.play("cacota");var s=this.body;s.reset(e,t),s.setSize(this.width/2,this.height/2,!1),s.setOffset(0,this.height/2),this.setBounce(.4),this.setVelocityX(-300),this.setVisible(!0),this.setActive(!0)},t.prototype.update=function(){this.body.right<-10&&(this.setActive(!1),this.setVisible(!1))},t.setupAnimations=function(e){var t=e.anims;t.create({key:"cacota",frames:t.generateFrameNames("obstacles",{prefix:"Poo_Idle",zeroPad:2,start:1,end:3,suffix:".png"}),frameRate:5,repeat:1/0})},t}(Phaser.Physics.Arcade.Sprite),h=function(){function e(e,t,s){this._pointer=t,this._cursors=e,this._player=s}return e.prototype.update=function(e,t){this._resolveJump(e,t)},e.prototype._resolveJump=function(e,t){var s=this._player.body.touching.down,i=this._cursors.space.isDown||this._pointer.isDown;i&&s&&(this._jumpDeadline=e+200),i&&e<this._jumpDeadline&&this._player.jump()},e}(),p=function(){var e=function(t,s){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(t,s)};return function(t,s){function i(){this.constructor=t}e(t,s),t.prototype=null===s?Object.create(s):(i.prototype=s.prototype,new i)}}(),u=["tienen baches","están bien","van guay","están chachi","son felices","son MUY felices"];!function(e){e[e.Happy=0]="Happy",e[e.Sad=1]="Sad"}(r||(r={}));var l=function(e){function t(t,s,i){var r=e.call(this,t,"metter")||this;return r._progress=0,r._currentLevel=1,r._player=s,r._depth=i,r._bubble=r.scene.add.image(0,0,"ui","Balloon"),r._bubble.depth=r._depth,r._face=r.scene.add.sprite(0,0,"ui"),r._face.depth=r._bubble.depth+1,r._hideBubble(),r._player.on("hit",r._loose,r),r._scoreText=r.scene.add.text(0,0,""),r._scoreText.depth=r._depth,r._setupLevel(r._currentLevel),r._bar=r.scene.add.graphics(),r}return p(t,e),t.prototype._setupLevel=function(e){var t=this.scene.cameras.main.width,s=this.scene.cameras.main.height;this._scoreText.setText(u[e]);var i=this._scoreText.width;this._scoreText.x=(t-i)/2,this._scoreText.y=s-45,this._progress=0},t.prototype._loose=function(){this._showBubble(r.Sad,3e3),this._progress-=.6,this._progress<0&&(this._progress=0,this._levelDown())},t.prototype._levelDown=function(){this._currentLevel>0&&(this._currentLevel--,this._setupLevel(this._currentLevel))},t.prototype._levelUp=function(){this._currentLevel<u.length-1&&(this._currentLevel++,this._setupLevel(this._currentLevel),this._showBubble(r.Happy,3e3))},t.prototype._showBubble=function(e,t){var s=this;this._bubble.setVisible(!0),this._face.setVisible(!0),this._face.anims.play(e==r.Happy?"level-up":"level-down"),this.scene.time.delayedCall(t,function(){s._hideBubble()},[],this)},t.prototype._hideBubble=function(){this._bubble.setVisible(!1),this._face.setVisible(!1)},t.prototype.update=function(e,t){this._bar.clear(),this._progress+=t/1e3*10/100,this._progress>=1&&(this._currentLevel<u.length-1?this._levelUp():this._progress=1);var s=this.scene.cameras.main.width/3,i=this.scene.cameras.main.height-15;this._bar.lineStyle(5,16777215,1),this._bar.lineBetween(s,i,s+s*this._progress,i),this._bubble.setPosition(this._player.x+15,this._player.y-this._player.height+5),this._face.setPosition(this._player.x+15,this._player.y-this._player.height-2)},t.setupAnimations=function(e){var t=e.anims;t.create({key:"level-up",frames:t.generateFrameNames("ui",{prefix:"HappyFace",zeroPad:2,start:1,end:2,suffix:".png"}),frameRate:5,repeat:1/0}),t.create({key:"level-down",frames:t.generateFrameNames("ui",{prefix:"SadFace",zeroPad:2,start:1,end:2,suffix:".png"}),frameRate:5,repeat:1/0})},t}(Phaser.GameObjects.GameObject),f=function(){var e=function(t,s){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(t,s)};return function(t,s){function i(){this.constructor=t}e(t,s),t.prototype=null===s?Object.create(s):(i.prototype=s.prototype,new i)}}();function d(e){return e[Math.floor(Math.random()*e.length)]}function _(e,t){var s=t-e;return Math.random()*s+e}var y,b=function(e){function t(t){var s=e.call(this,t,0,0,"deco")||this;return s._disable(),s}return f(t,e),t.prototype._disable=function(){this.setActive(!1),this.setVisible(!1)},t.prototype.update=function(){this.body.right<-10&&this._disable()},t}(Phaser.Physics.Arcade.Sprite),g=function(e){function t(t){var s=e.call(this,t)||this;return s.setOrigin(.5,1),s}return f(t,e),t.prototype.show=function(e,t){this.setFrame(d(["Grass01.png","Grass02.png","Grass03.png"])),this.depth=t;var s=this.body;s.setAllowGravity(!1);var i=this.scene.cameras.main;s.reset(_(i.width+this.width,2*i.width),e),this.setVelocityX(-300),this.setActive(!0),this.setVisible(!0)},t}(b),m=function(e){function t(t){var s=e.call(this,t)||this;return s.setOrigin(.5,1),s}return f(t,e),t.prototype.show=function(e,t){this.setFrame(d(["Cloud01.png","Cloud02.png","Cloud03.png","Cloud04.png"]));var s=this.body,i=Math.floor(_(this.height,e)),r=this.scene.cameras.main;s.setAllowGravity(!1),s.reset(_(r.width+this.width,2*r.width),i);var n=d([[10,0],[100,1],[300,2]]),a=n[0],o=n[1];this.depth=t+o,this.setVelocityX(-_(.8*a,1.2*a)),this.setActive(!0),this.setVisible(!0)},t}(b),v=function(e){function t(t,s,i,r){var n=e.call(this,t,"bg-manager")||this;return n._ground=s,n._groundHeight=n.scene.cameras.main.height-n._ground.height,n._bgDepth=i,n._fgDepth=r,n._grass=n.scene.physics.add.group({classType:g,maxSize:20,runChildUpdate:!0}),n._clouds=n.scene.physics.add.group({classType:m,maxSize:10,runChildUpdate:!0}),n.scene.physics.add.collider(n._ground,n._grass),n}return f(t,e),t.prototype.update=function(){if(Math.random()<.4){var e=this._grass.get();e&&e.show(this._groundHeight,this._fgDepth)}var t=this._clouds.get();t&&t.show(this._groundHeight/6*5,this._bgDepth)},t}(Phaser.GameObjects.GameObject);!function(e){e[e.BG=0]="BG",e[e.BG_ELEMENTS=10]="BG_ELEMENTS",e[e.PLAYER=100]="PLAYER",e[e.OBSTACLES=110]="OBSTACLES",e[e.FG=200]="FG",e[e.UI=300]="UI"}(y||(y={}));var w=function(){var e=function(t,s){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(t,s)};return function(t,s){function i(){this.constructor=t}e(t,s),t.prototype=null===s?Object.create(s):(i.prototype=s.prototype,new i)}}(),O=800,x=450,P=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.anotherObstacle=!0,t}return w(t,e),t.prototype.preload=function(){this.load.image("bg","assets/environments/background-test.png"),this.load.image("ground","assets/environments/ground-line.png"),this.load.atlas("characters","assets/characters/characters.png","assets/characters/characters.json"),this.load.atlas("obstacles","assets/obstacles/obstacles.png","assets/obstacles/obstacles.json"),this.load.atlas("ui","assets/ui/ui.png","assets/ui/ui.json"),this.load.atlas("deco","assets/environments/deco.png","assets/environments/deco.json")},t.prototype.create=function(){var e=this;a.setupAnimations(this),c.setupAnimations(this),l.setupAnimations(this);this.add.image(0,0,"bg").setOrigin(0,0);var t=this.physics.add.staticGroup();this.groundLine=t.create(0,x,"ground"),this.groundLine.setOrigin(0,1),this.groundLine.setScale(2,1),this.groundLine.refreshBody(),this.background=new v(this.scene.scene,this.groundLine,y.BG_ELEMENTS,y.FG),this.obstacles=this.physics.add.group({classType:c,maxSize:20,runChildUpdate:!0}),this.player=this.add.existing(new a(this.scene.scene)),this.player.depth=y.PLAYER,this.physics.add.existing(this.player),this.player.show(O/4,x/2),this.control=new h(this.input.keyboard.createCursorKeys(),this.input.addPointer()[0],this.player),this.hapyness=this.add.existing(new l(this.scene.scene,this.player,y.UI)),this.physics.add.collider(this.player,t),this.physics.add.collider(this.obstacles,t),this.physics.add.overlap(this.player,this.obstacles,function(t,s){e.player.hit()},null,this),this.anims.create({key:"hiding-otter",frames:this.anims.generateFrameNames("obstacles",{prefix:"Otter_Hide",zeroPad:2,start:1,end:4,suffix:".png"}),frameRate:3,repeat:1})},t.prototype.update=function(e,t){var s=this;if(this.control.update(e,t),this.hapyness.update(e,t),this.background.update(),this.anotherObstacle){this.anotherObstacle=!1,setTimeout(function(){return s.anotherObstacle=!0},1e3);var i=this.obstacles.get();i.depth=y.OBSTACLES,i.show(O,x/2)}},t}(Phaser.Scene),S={type:Phaser.AUTO,width:O,height:x,scene:P,pixelArt:!0,physics:{default:"arcade",arcade:{gravity:{y:4e3},debug:!1}},canvas:document.querySelector("canvas")};new Phaser.Game(S)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,